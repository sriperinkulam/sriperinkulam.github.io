<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guides on Srikanth Perinkulam</title>
    <link>http://localhost:1313/categories/guides/index.xml</link>
    <description>Recent content in Guides on Srikanth Perinkulam</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</managingEditor>
    <webMaster>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</webMaster>
    <lastBuildDate>Fri, 06 Aug 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/guides/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building the end plan</title>
      <link>http://localhost:1313/2021/08/06/building-the-end-plan/</link>
      <pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate><author>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</author>
      <guid>http://localhost:1313/2021/08/06/building-the-end-plan/</guid>
      <description>&lt;p&gt;&lt;em&gt;Leave a comment if any of this doesn&amp;rsquo;t make sense. I&amp;rsquo;ll be more than happy to help.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Over the last few years, I&amp;rsquo;ve been wanting to setup a comprehensive and secure ‘handover’ document for my family - In case I cease to exist. My key priorities were it should :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;be easy to update and maintain when I am alive&lt;/li&gt;&#xA;&lt;li&gt;be easy to reference and access when I am dead&lt;/li&gt;&#xA;&lt;li&gt;have multiple fall-back points&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Now, the most straightforward way to do this would be to have all the information on a secure spreadsheet or document. But that&amp;rsquo;s not fun! So I decided to use Trilium Notes for it. When it&amp;rsquo;s time, my wife has three options to access the support checklist a) Online via a secure portal/app b) Using a secure flash-drive c) Old school printed sheets&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/Screenshot-from-2021-08-06-15-05-32-1200x600.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;I think this is something super easy to replicate. Leaving this out here should someone find it useful.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s get up and running:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Grab the &lt;a href=&#34;https://www.electronjs.org/apps/trilium-notes&#34;&gt;Trilium desktop app from here&lt;/a&gt; and install it on your machine. If it&amp;rsquo;s the first time you are using it, it should prompt you to create a local account. You can sync this with the &lt;a href=&#34;https://srikanthperinkulam.com/2021/04/06/installing-trilium-notes/&#34;&gt;server app&lt;/a&gt; later if you need one.&lt;/li&gt;&#xA;&lt;li&gt;On first install, Trilium also installs a demo document. This is super helpful to understand how Trilium works. But for now, collapse the &amp;lsquo;&lt;em&gt;Trilium Demo&lt;/em&gt;&amp;rsquo; folder in the left sidebar.&lt;/li&gt;&#xA;&lt;li&gt;Download my  &amp;lsquo;&lt;a href=&#34;https://github.com/sriperinkulam/closeout/raw/main/Closeout%20Template.zip&#34;&gt;Closeout html&lt;/a&gt;&amp;rsquo; template zip file. Right click on the &amp;lsquo;root&amp;rsquo; folder on the left sidebar and click &amp;lsquo;Import into&amp;rsquo;. Select the zip file you just downloaded and click on &amp;lsquo;Import&amp;rsquo;. That&amp;rsquo;s it! Update the template to your needs and export for backups.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Maintaining and backups:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;To encrypt the folder, just right click on  and select &amp;lsquo;protect subtree&amp;rsquo;.&lt;/li&gt;&#xA;&lt;li&gt;Trilium provides you three modes of export - Zipped HTML, Zipped markdown and OPML. I prefer the HTML export since it can be used in isolation. Do note however that all notes lose their encryption when they&amp;rsquo;re exported out!&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Generic notes:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;I&amp;rsquo;ve used Trilium notes since it fits into my workflow. You should be able to import the template into any note-taking app.&lt;/li&gt;&#xA;&lt;li&gt;The template is obviously bare minimum and generic. Tweak/add based on your personal situation.&lt;/li&gt;&#xA;&lt;li&gt;I&amp;rsquo;ve intentionally kept my guidance instructions and passwords isolated since I don&amp;rsquo;t want to be printing them on paper. You could have them all in one place here in Trilium and secure the folder.&lt;/li&gt;&#xA;&lt;li&gt;If saving the files/backups on a flash drive, I&amp;rsquo;d strongly recommend you use &lt;a href=&#34;https://srikanthperinkulam.com/2020/11/01/encrypting-drives/&#34;&gt;VeraCrypt&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;I am a reasonably healthy person with no alarming issues. But hey, you never know! I think it&amp;rsquo;s critical that your family has good guidance on how best to pick up where you left off. Think of this as the last parting gift. It took me about four years of procrastination and few spurts of action to get here. And I am so glad I did. If not anything, it&amp;rsquo;s helping me document these critical pieces in one place.&lt;/p&gt;&#xA;&lt;p&gt;What&amp;rsquo;s your life closeout plan?&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Caddy through the tunnel</title>
      <link>http://localhost:1313/2021/07/28/caddy-through-the-tunnel/</link>
      <pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate><author>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</author>
      <guid>http://localhost:1313/2021/07/28/caddy-through-the-tunnel/</guid>
      <description>&lt;p&gt;&lt;em&gt;Leave a comment if any of this doesn&amp;rsquo;t make sense. I&amp;rsquo;ll be more than happy to help.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;I recently installed &lt;a href=&#34;https://srikanthperinkulam.com/2021/07/28/july-27-2021-2105/&#34;&gt;Navidrome on an Odroid XU4&lt;/a&gt; and configured &lt;a href=&#34;https://srikanthperinkulam.com/2021/07/15/guacamole-clientless-remote-desktop-access/&#34;&gt;Guacamole on my NUC&lt;/a&gt;. To access these applications securely on an external network, I setup a WireGuard tunnel and took this opportunity to learn how to use Caddy as a reverse proxy. Here&amp;rsquo;s a quick walk-through:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/image-2.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Setup the VPS:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Since we need a VPS just to tunnel traffic, get a lightweight one from a reliable provider. After the regular server hardening, setup your first WireGuard peer. I chose to use &lt;a href=&#34;https://github.com/angristan/wireguard-install&#34;&gt;this script&lt;/a&gt; . &lt;/p&gt;&#xA;&lt;p&gt;To route traffic from the external web, configure your DNS settings to point to the VPS and then setup haproxy on the VPS:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## install haproxy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install haproxy -y&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## setup the config&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo nano /etc/haproxy/haproxy.cfg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Get the proxy config from my &lt;a href=&#34;https://gist.github.com/sriperinkulam/805cd86cd9ed797c8774d2331f135326&#34;&gt;gist here&lt;/a&gt; and make sure you edit the IP address at the end. Once that is done, close out the file and restart the service:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## check config&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;haproxy -f /etc/haproxy/haproxy.cfg -c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## restart&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo systemctl restart haproxy.service&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With the above steps complete, you should have a WireGuard tunnel that&amp;rsquo;s ready to send traffic over to its peers.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Setup your peers:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Install WireGuard on the device you&amp;rsquo;d like to connect to the external network. Since we&amp;rsquo;ve already setup the first peer [Server], we&amp;rsquo;ll just have to copy over the configs and update it for the other peers [clients]. There are quite a few guides out there that outline this. Happy to provide pointers if required. Once you the peer(s) up and running, make sure they can &amp;rsquo;talk&amp;rsquo; to each other :&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;ping -c 1 xx.xx.xx.xx&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Great! Now we have the VPS and the WireGuard peers setup and talking to each other. Now on to routing the traffic. I would generally use Traefik for this. However, I wanted to explore caddy and this was a great test-case. I have docker containers running in DietPi on my Odroid-XU4. I spun up the caddy container using the below compose:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;version: &amp;#34;3&amp;#34;&#xA;&#xA;networks:&#xA;        web:&#xA;                external: true&#xA;services:&#xA;        caddy:&#xA;                image: caddy:2-alpine&#xA;                restart: unless-stopped&#xA;                ports:&#xA;                        - &amp;#34;80:80&amp;#34;&#xA;                        - &amp;#34;443:443&amp;#34;&#xA;                volumes:&#xA;                        - /home/dietpi/caddy/Caddyfile:/etc/caddy/Caddyfile&#xA;                        - /home/dietpi/caddy/data:/data&#xA;                        - /home/dietpi/caddy/config:/config&#xA;                networks:&#xA;                        - web&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And the Caddyfile below.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{&#xA;    # Global options block. Entirely optional, https is on by default&#xA;    # Optional email key for lets encrypt&#xA;    email updateme@domain.tld &#xA;    # Optional staging lets encrypt for testing. Comment out for production.&#xA;    # acme_ca https://acme-staging-v02.api.letsencrypt.org/directory&#xA;}&#xA;app1.domain.tld {&#xA;    reverse_proxy containername:port&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; You&amp;rsquo;ll obviously have to tweak them for your needs. With all this set, you should now have functional access to your applications on the home-server externally!&lt;/p&gt;&#xA;&lt;p&gt;It did take me a bit to figure out the moving parts. However, this was a fun exercise to tinker with caddy. Also I&amp;rsquo;ve been using the &lt;a href=&#34;https://pixel.srkn.org/p/sriperinkulam/321094300853211136&#34;&gt;journal feature in Trilium&lt;/a&gt; to keep track of those hopping thoughts as I worked my way through setting this up. Tremendously useful! Questions or have a better way to set this up? I&amp;rsquo;m all ears!&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Guacamole - Clientless Remote Desktop access</title>
      <link>http://localhost:1313/2021/07/15/guacamole-clientless-remote-desktop-access/</link>
      <pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><author>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</author>
      <guid>http://localhost:1313/2021/07/15/guacamole-clientless-remote-desktop-access/</guid>
      <description>&lt;p&gt;I have been using &lt;a href=&#34;https://anydesk.com/en&#34;&gt;Anydesk&lt;/a&gt; for a while now to remote into my NUC workstation. It works great but for one big downside - It needs you to install the tool on both machines.  While looking for alternatives, I came across &lt;a href=&#34;https://guacamole.apache.org/&#34;&gt;Guacamole&lt;/a&gt; which is a clientless remote desktop gateway. Set it up on the server and you can access your desktops now from any browser! So technically, If needed I could access my workstation even from a hand held device. All I need is a browser that supports HTML5!&lt;/p&gt;&#xA;&lt;p&gt;It literally took me five minutes to set this up. Here&amp;rsquo;s a quick run-through:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Install &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker-compose&lt;/a&gt; if you don&amp;rsquo;t have that setup already&lt;/li&gt;&#xA;&lt;li&gt;If the server is a linux machine and you need remote desktop access, now might be a good time to check and install xrdp: &lt;code&gt;sudo apt install xrdp -y&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Fetch the docker-compose file &lt;a href=&#34;https://github.com/reisbel/guacamole-docker-compose&#34;&gt;from here&lt;/a&gt; and follow instructions in the readme. You&amp;rsquo;re essentially setting up the postgres database and then spinning up the guac and guacd containers.&lt;/li&gt;&#xA;&lt;li&gt;Once the containers are up and running, your Guacamole server should be available at &lt;code&gt;http://localhost:8080/guacamole/&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Now that you have a functional server, lets tweak the settings to make this a bit client-ready:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Change the default login/password - duh!&lt;/li&gt;&#xA;&lt;li&gt;Navigate to Settings &amp;gt; Connections and add a new connection.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Under Edit Connection, add in a name and select &lt;strong&gt;RDP&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/image.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Scroll down to Parameters and fill in details for your network and authentication.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/image-1.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Scroll all the way down and save. That&amp;rsquo;s it! As you&amp;rsquo;d see there are &lt;a href=&#34;https://guacamole.apache.org/doc/gug/configuring-guacamole.html#rdp&#34;&gt;quite a few parameters&lt;/a&gt; that you can define for each connection. The above should however be sufficient to get you started.&lt;/p&gt;&#xA;&lt;p&gt;Now that you have the server setup and the connections defined, you&amp;rsquo;re ready to connect to the machines directly from any browser within the same network. Navigate to http://&lt;!-- raw HTML omitted --&gt;:8080/guacamole, login and based on your configuration you will be either connected to the server directly or provided the option to choose from the connections available. To access the machine from a different network, you&amp;rsquo;ll have to tunnel through which I&amp;rsquo;ll probably cover in a follow-up post.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Installing Trilium Notes</title>
      <link>http://localhost:1313/2021/04/06/installing-trilium-notes/</link>
      <pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate><author>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</author>
      <guid>http://localhost:1313/2021/04/06/installing-trilium-notes/</guid>
      <description>&lt;p&gt;&lt;em&gt;I wrote this guide &lt;a href=&#34;https://community.hetzner.com/tutorials/install-trilium-notes-using-docker&#34;&gt;initially for the Hetzner community&lt;/a&gt;. Posting here for posterity.&lt;/em&gt; Leave a comment if any of this doesn&amp;rsquo;t make sense. I&amp;rsquo;ll be more than happy to help.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases. See the &lt;a href=&#34;https://github.com/zadam/trilium&#34;&gt;Trilium Github&lt;/a&gt; page for more details. In this tutorial we will deploy a Trilium instance to install this open source and self-hosted alternative to Evernote on a fresh Debian server.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;To get this running you would need&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A server with Docker and Docker-compose installed. There&amp;rsquo;s &lt;a href=&#34;https://community.hetzner.com/tutorials/debian-base-configuration-docker&#34;&gt;an easy step-by-step tutorial&lt;/a&gt; that you could follow.&lt;/li&gt;&#xA;&lt;li&gt;A domain pointing to the IP address of your server instance. The tutorial assumes you have pointed the domain &lt;code&gt;notes.example.com&lt;/code&gt; to your server IP address.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-1---setup-docker-network-and-our-work-folder&#34;&gt;Step 1 - Setup Docker network and our work folder&lt;/h2&gt;&#xA;&lt;p&gt;For ease of deployment and maintenance, we will use Docker in &lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;swarm mode&lt;/a&gt;. For security certificates and application mapping we will use &lt;a href=&#34;https://docs.traefik.io/&#34;&gt;Traefik&lt;/a&gt; as a reverse proxy. It&amp;rsquo;s perfectly fine if you&amp;rsquo;ve not used these services before. All necessary steps to get them working are outlined in detail below.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Initialise the docker swarm: &lt;code&gt;sudo docker swarm init&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Setup a &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/network/&#34;&gt;network&lt;/a&gt; for the Traefik container: &lt;code&gt;sudo docker network create --driver=overlay traefik-net&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Create a directory where we will save all our stack yml files and navigate to that directory: &lt;code&gt;mkdir stacks &amp;amp;&amp;amp; cd stacks&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpscommunityhetznercomtutorialsinstall-trilium-notes-using-dockerstep-2---&#34;&gt;[](&lt;a href=&#34;https://community.hetzner.com/tutorials/install-trilium-notes-using-docker#step-2---&#34;&gt;https://community.hetzner.com/tutorials/install-trilium-notes-using-docker#step-2---&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;categories:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Guides&#xA;coverImage: Trilium01.png&#xA;date: &amp;ldquo;2021-04-06&amp;rdquo;&#xA;tags:&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;evernote-alternative&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;trilium-docker&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;update&#xA;title: Installing Trilium Notes&#xA;&amp;mdash;create-the-yml-file-for-traefik)Step 2.1 - Create the yml file for Traefik&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a yml file for traefik: &lt;code&gt;nano traefik-ssl.yml&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Copy over the following contents into the yml file:&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;version: &amp;#34;3.7&amp;#34;&#xA;&#xA;services:&#xA;  traefik:&#xA;    image: traefik:${VERSION:-v1.7.24-alpine}&#xA;    ports:&#xA;      - { target: 80, published: 80, mode: host, protocol: tcp }&#xA;      - { target: 443, published: 443, mode: host, protocol: tcp }&#xA;    command:&#xA;      # - --debug&#xA;      # - --loglevel=INFO&#xA;      - --entryPoints=Name:http Address::80 Compress:true Redirect.EntryPoint:https&#xA;      - --entryPoints=Name:https Address::443 Compress:true TLS&#xA;      - --defaultEntryPoints=https,http&#xA;      - --providers.docker.endpoint=tcp://socket-proxy:2375&#xA;      - --docker.swarmmode=true&#xA;      - --docker.exposedbydefault=false&#xA;      - --docker.network=traefik-net&#xA;      - --metrics.prometheus=true&#xA;      - --consul&#xA;      - --consul.endpoint=consul:8500&#xA;      - --consul.prefix=traefik&#xA;      - --acme&#xA;      - --acme.onHostRule=true&#xA;      - --acme.storage=traefik/acme/account&#xA;      - --acme.acmeLogging=true&#xA;      - --acme.entryPoint=https&#xA;      - --acme.httpChallenge.entryPoint=http&#xA;     # - --update email&#xA;      - --acme.email=${ACME_EMAIL:-noreply@example.com} &#xA;      - --api&#xA;    deploy:&#xA;      mode: ${MODE:-replicated}&#xA;      placement:&#xA;        constraints: [node.role==manager]&#xA;    networks:&#xA;      - internal&#xA;      - traefik&#xA;&#xA;  socket-proxy:&#xA;    image: tecnativa/docker-socket-proxy&#xA;    volumes:&#xA;      - /var/run/docker.sock:/var/run/docker.sock:ro&#xA;    environment:&#xA;      CONTAINERS: 1&#xA;    networks:&#xA;      - internal&#xA;      - traefik&#xA;&#xA;  consul:&#xA;    image: consul:1.7.2&#xA;    command: agent -server -bootstrap-expect=1 -client=0.0.0.0&#xA;    environment:&#xA;      CONSUL_BIND_INTERFACE: eth0&#xA;      CONSUL_CLIENT_INTERFACE: eth0&#xA;      CONSUL_LOCAL_CONFIG: &amp;#39;{ &amp;#34;limits&amp;#34;: { &amp;#34;txn_max_req_len&amp;#34;: 2048000, &amp;#34;kv_max_value_size&amp;#34;: 2048000 } }&amp;#39;&#xA;    volumes:&#xA;      - ${VOLUME_PATH}consul:/consul/data&#xA;    networks:&#xA;      - traefik&#xA;      - internal&#xA;&#xA;volumes:&#xA;  consul:&#xA;&#xA;networks:&#xA;  internal:&#xA;    driver: overlay&#xA;    attachable: true&#xA;  traefik:&#xA;    external: true&#xA;    name: traefik-net&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;step-22---create-the-yml-file-for-trilium&#34;&gt;Step 2.2 - Create the yml file for Trilium&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create a yml file for trilium: &lt;code&gt;nano trilium.yml&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Copy over the following contents into the yml file:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;version: &amp;#39;3.7&amp;#39;&#xA;services:&#xA;  web:&#xA;    image: zadam/trilium:0.46.7&#xA;    volumes:&#xA;      - ${VOLUME_PATH}trilium-data:/root/trilium-data&#xA;    deploy:&#xA;      labels:&#xA;        - traefik.port=8080&#xA;        - traefik.enable=true&#xA;        - traefik.frontend.rule=Host:${DOMAIN:-notes.localhost}&#xA;    networks:&#xA;      - traefik&#xA;volumes:&#xA;  trilium-data:&#xA;networks:&#xA;  traefik:&#xA;    external: true&#xA;    name: traefik-net&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpscommunityhetznercomtutorialsinstall-trilium-notes-using-dockerstep-3---deploy-the-stacks&#34;&gt;&lt;a href=&#34;https://community.hetzner.com/tutorials/install-trilium-notes-using-docker#step-3---deploy-the-stacks&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;step-3---deploy-the-stacks&#34;&gt;Step 3 - Deploy the stacks&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Deploy the Traefik stack: &lt;code&gt;sudo docker stack deploy -c traefik-ssl.yml traefik&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Deploy the Trilium stack: &lt;code&gt;DOMAIN=notes.example.com SCHEME=https docker stack deploy -c trilium.yml trilium&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Give the system a few minutes to fetch the docker images and setup and run the containers in the background. To check the status of the containers you can run the command: &lt;code&gt;docker ps -a&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;step-4---finish-the-setup-in-your-browser&#34;&gt;Step 4 - Finish the setup in your browser&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Navigate to &lt;code&gt;notes.example.com&lt;/code&gt; in your browser. You should now be presented with the following options as shown in the image below:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/Trilium01.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Select the first option and click &amp;lsquo;Next&amp;rsquo;&lt;/li&gt;&#xA;&lt;li&gt;Create a user account for your Trilium Notes instance in the next screen and you should be all set now!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpscommunityhetznercomtutorialsinstall-trilium-notes-using-dockerconclusionconclusion&#34;&gt;&lt;a href=&#34;https://community.hetzner.com/tutorials/install-trilium-notes-using-docker#conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&#xA;&lt;p&gt;With a few simple steps we were able to setup and run a good alternative to Evernote. You can even import your notes from Evernote if you&amp;rsquo;d like.&lt;/p&gt;&#xA;&lt;p&gt;Go ahead and explore your new setup! The &lt;a href=&#34;https://github.com/zadam/trilium/wiki&#34;&gt;Wiki&lt;/a&gt; is also very informative for what you can do next.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Screenshare using Signal</title>
      <link>http://localhost:1313/2021/04/04/screenshare-using-signal/</link>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><author>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</author>
      <guid>http://localhost:1313/2021/04/04/screenshare-using-signal/</guid>
      <description>&lt;p&gt;I was tweaking my &lt;a href=&#34;https://obsproject.com/&#34;&gt;OBS Studio&lt;/a&gt; settings earlier this morning and &lt;a href=&#34;https://obsproject.com/wiki/install-instructions#ubuntumint-installation&#34;&gt;noticed I could install a virtual camera&lt;/a&gt; on my machine. Once this add-on is installed and activated, it essentially exposes OBS studio &amp;lsquo;scenes&amp;rsquo; as an input that any conferencing software could use instead of the webcam feed. This effectively translates to sharing your screen with other participants on the conference call!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/OBS-Screenshot-1200x675.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Ever since I deleted my whatsapp account and &lt;a href=&#34;https://srikanthperinkulam.com/2021/01/10/digital-reset/&#34;&gt;moved over to using Signal&lt;/a&gt; as my primary communication tool, this is one feature I wish the Signal app had. And now, I could use this neat little trick not just with Signal but any conferencing app that doesn&amp;rsquo;t let me share my screen in their free-tier!&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>DIY Passport Photos</title>
      <link>http://localhost:1313/2021/01/25/diy-passport-photos/</link>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><author>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</author>
      <guid>http://localhost:1313/2021/01/25/diy-passport-photos/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a quick and simple way to make and print your own passport photos[PP]. I&amp;rsquo;ve used &lt;a href=&#34;https://www.gimp.org/&#34;&gt;GIMP&lt;/a&gt; - which is a fabulous photo editing tool. They have a nifty &lt;a href=&#34;https://www.gimp.org/downloads/&#34;&gt;installer&lt;/a&gt; irrespective of which OS you use and have stood the test of time. There are a slew of different ways to arrive at the final product. This method has worked well for me over the past and based on your specific needs, you might have to alter a few settings.&lt;/p&gt;&#xA;&lt;p&gt;Now let&amp;rsquo;s say you have the below image that you&amp;rsquo;d like to make PP&amp;rsquo;s out of and you&amp;rsquo;d like them to be 2&amp;rsquo;&amp;lsquo;x2&amp;rsquo;&amp;rsquo; with other constraints laid out &lt;a href=&#34;https://travel.state.gov/content/travel/en/passports/how-apply/photos.html&#34;&gt;here&lt;/a&gt;. This one&amp;rsquo;s obviously a bad image to start out with, but should be a good test subject!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/Dummy-1-150x150.jpeg&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Isolate and sanitize&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;p&gt;Ideally, you&amp;rsquo;d want to get a good photo of the subject. Make sure s/he is standing against a light background and there&amp;rsquo;s sufficient uniform lighting on the face. If you&amp;rsquo;re not able to get that you&amp;rsquo;ll have to &amp;lsquo;sanitize&amp;rsquo; the image first. And here&amp;rsquo;s how we go about doing that:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open the image in GIMP and scale the image such that the distance between the top of the head and the bottom of the chin is about 1.1875 inch [Midway between 1 inch and 1.375 inch - The specs that was mentioned in the Travel web portal].&#xA;&lt;ul&gt;&#xA;&lt;li&gt;To measure: Press &amp;lsquo;Shift+M&amp;rsquo; - This is the shortcut for the measure tool. Use the mouse pointer to measure distance. The measurements should be visible at the bottom.&lt;/li&gt;&#xA;&lt;li&gt;To scale: Navigate to &amp;lsquo;&lt;em&gt;Image&lt;/em&gt;&amp;rsquo; on the top navigation bar and then select &amp;lsquo;&lt;em&gt;Scale Image&lt;/em&gt;&amp;rsquo;. Change the &lt;em&gt;Image size&lt;/em&gt; attribute to % and scale down to the requisite level. For instance, I had to scale down to 60% since my initial Head-chin length was about 50mm.&lt;/li&gt;&#xA;&lt;li&gt;Finally measure the resulting image&amp;rsquo;s head to chin length in pixels. In our test case this was 366 pixels after the scaling. So our DPI [Dots (Pixels) per inch] is 366/1.1875 ~=308. We&amp;rsquo;ll use this later to crop our image.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/Before-scaling-1200x652.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/scale-image-1200x656.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;2. If your image does not have a uniform light background or has shadows [Like in our case] here&amp;rsquo;s how you digitally make the background white. Do note that certain agencies/services do not accept digitally altered images - So make sure you have some great lighting!&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Select the Paths tool - Shortcut &amp;lsquo;B&amp;rsquo;.&lt;/li&gt;&#xA;&lt;li&gt;Use your mouse and make a path around the subject. Make sure you close out the loop at the end by pressing Ctrl.&lt;/li&gt;&#xA;&lt;li&gt;Convert the path to a selection by pressing on the &amp;lsquo;&lt;em&gt;Selection from path&lt;/em&gt;&amp;rsquo; on the &lt;strong&gt;Path&lt;/strong&gt; sidebar&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/Selection-from-path-600x326.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Press Ctrl+I to invert the selection and press Delete on your keyboard to erase the background.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Now that we&amp;rsquo;ve cleared the background, export the image as a jpeg and save for further processing.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Create the 2&amp;rsquo;&amp;lsquo;x2&amp;rsquo;&amp;rsquo; image&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;p&gt;Since we have a 308 DPI image , The 2&amp;quot; x 2&amp;quot; image would be about [308x2, 308x2] pixels = 617x617 pixels. [Your values would obviously be different based on where you started!]&lt;/p&gt;&#xA;&lt;p&gt;To crop out our 2&amp;quot;x2&amp;quot; image, click on the &amp;lsquo;&lt;em&gt;Rectangular Select tool&lt;/em&gt;&amp;rsquo; - [Shortcut R]. Then on the &amp;lsquo;&lt;strong&gt;Rectangular Select&lt;/strong&gt;&amp;rsquo; sidebar, check the &lt;em&gt;Fixed&lt;/em&gt; checkbox and set the parameter to &amp;lsquo;&lt;em&gt;size&lt;/em&gt;&amp;rsquo;. Also further below switch the &amp;lsquo;&lt;em&gt;No guides&lt;/em&gt;&amp;rsquo; drop-down to &amp;lsquo;&lt;em&gt;Center Lines&lt;/em&gt;&amp;rsquo;. Now click on the image and you should see a square box with central guide lines.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/2x2-grab-600x326.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Move the box and center it so as to fit the image well within the box. Finally, Right-click on the Image, select &amp;lsquo;&lt;em&gt;Image&lt;/em&gt;&amp;rsquo; and then &amp;lsquo;&lt;em&gt;Crop to Selection&lt;/em&gt;&amp;rsquo;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Build the 4&amp;quot;x6&amp;quot; canvas:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Lets create a new image canvas to hold our 6 PP photos. Use the shortcut Ctrl+N to create a new image. Set the image size as 4&amp;quot;x6&amp;quot;. Open the advanced options and set the X and Y resolution to 308 pixels/in. While here you might also want to set the &lt;em&gt;Fill&lt;/em&gt; option to &lt;em&gt;White&lt;/em&gt;. Now that we have the base canvas ready, navigate to Image&amp;gt;Guides&amp;gt;New Guide(By Percent) and create two horizontal (33.33%,66.66%) and one vertical(50.00%) guide.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/Canvas-1200x675.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/Guides-1200x675.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Now switch back to the previous GIMP window that has the 2&amp;quot;x2&amp;quot; image. Select all with Ctrl+A, Copy with Ctrl+C, switch over to the 4&amp;quot;x6&amp;quot; canvas and paste it over six times with Ctrl+V. Move the pasted images to the individual boxes. The guides will help snap the the images correctly.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/Final-4x6-1-1200x652.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;That&amp;rsquo;s it! You now have a stellar looking 4&amp;quot;x6&amp;quot; canvas that you can export to a jpeg/jpg format and print out on a matte photo card either at home or any of the external printing centers.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Self-hosting Jitsi video conferencing</title>
      <link>http://localhost:1313/2020/04/19/self-hosting-jitsi-video-conferencing/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate><author>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</author>
      <guid>http://localhost:1313/2020/04/19/self-hosting-jitsi-video-conferencing/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://jitsi.org/&#34;&gt;Jit.si&lt;/a&gt; is a terrific, secure video-conferencing #alternative to #Zoom and obviously comes with all the open-source awesomeness. Call clarity is amazing and with a room capacity of 100+ (and potentially much more, driven by network and server capabilities), it&amp;rsquo;s an absolute no-brainer to switch over. Use &lt;a href=&#34;https://meet.jit.si/&#34;&gt;Jitsi Meet&lt;/a&gt; on the desktop or use one of their slick android, F-droid or iPhone apps on hand-held devices to organise your video conferences.&lt;/p&gt;&#xA;&lt;p&gt;With the recent push to video-conferencing most meetings, I decided to setup my own instance. This was way more straightforward than I thought! I am currenty running it as a docker container, fronted with #Traefik for encryption. Configuration and installation steps mentioned below assume you have access to a domain name and server with docker already installed.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Setting up the server:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;A records:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Create a new A record with your hosting provider to point your subdomain to the IP address of your server&lt;/p&gt;&#xA;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/image.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;SSH into server and install&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;p&gt;It should cost you only about 5$ per month for a decent server configuration. I already had an account with Hetzner, so I deployed my instance there.&lt;/p&gt;&#xA;&lt;p&gt;SSH into your server: &lt;code&gt;sudo ssh user@xx.xx.xx.xx&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Initialise a swarm: &lt;code&gt;sudo docker swarm init&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Create the traefik network: &lt;code&gt;sudo docker network create --driver=overlay traefik-net&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Create two new yml files - one for traefik-ssl and another for jitsi, copy over the contents from the respective files &lt;a href=&#34;https://github.com/ethibox/stacks&#34;&gt;available here from ethibox&lt;/a&gt; and make edits as needed:&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;sudo nano traefik-ssl.yml&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;sudo nano jitsi.yml&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Deploy the Traefik stack: &lt;code&gt;sudo docker stack deploy -c traefik-ssl.yml traefik&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Deploy the Jitsi stack: &lt;code&gt;DOMAIN=meet.srkn.org SCHEME=https docker stack deploy -c jitsi.yml jitsi&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;If all goes well, you should now have a Jitsi instance running on your server with routing and ssl taken care of by Traefik.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Configuring Jitsi:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;You now need to setup the admin account. Login to the Jitsi prosody container. (Update command to reflect your container name):&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;docker exec -it jitsi_prosody_1.xxxxxx bash&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Set as many host credentials as you need:&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;prosodyctl --config /config/prosody.cfg.lua register host meet.jitsi usejitsi&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Exit out of the console! You now have a fully functional self-hosted Video-conference running! Do note that the recording feature currently does not work outright. Will have to sort that out over the next few days.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Desktop and Mobile clients:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;I decided to go the &lt;a href=&#34;https://github.com/jitsi/jitsi-meet-electron/#jitsi-meet-electron&#34;&gt;electron route&lt;/a&gt; for the desktop client. Jitsi has apps for both android and iOS that work out of the box. Just make sure you set the domains to yours.&lt;/p&gt;&#xA;</description>
    </item>
  </channel>
</rss>
