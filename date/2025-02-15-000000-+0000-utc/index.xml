<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2025-02-15 00:00:00 &#43;0000 UTC on Srikanth Perinkulam</title>
    <link>https://srikanthperinkulam.com/date/2025-02-15-000000-&#43;0000-utc/index.xml</link>
    <description>Recent content in 2025-02-15 00:00:00 &#43;0000 UTC on Srikanth Perinkulam</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 15 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://srikanthperinkulam.com/date/2025-02-15-000000-+0000-utc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Code Snippets</title>
      <link>https://srikanthperinkulam.com/snippets/</link>
      <pubDate>Sat, 15 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://srikanthperinkulam.com/snippets/</guid>
      <description>&lt;p&gt;Just a bunch of snippets for easy use elsewhere.&lt;/p&gt;&#xA;&lt;h3 id=&#34;building-json-output-for-posts-with-certain-tags&#34;&gt;Building JSON output for posts with certain tags&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;{{- $tags := (slice &amp;quot;hiking&amp;quot; &amp;quot;add-other-tags&amp;quot;) }}  &amp;lt;!-- Replace with your desired tags --&amp;gt;&#xA;{&#xA;    &amp;quot;play&amp;quot;: [&#xA;        {{- $articles := .Site.RegularPages }}&#xA;        {{- $filteredPosts := where $articles &amp;quot;Params.tags&amp;quot; &amp;quot;intersect&amp;quot; $tags }}&#xA;        {{- range $index, $item := $filteredPosts }}&#xA;        {&#xA;            &amp;quot;date&amp;quot;: &amp;quot;{{ $item.Date.Format &amp;quot;2006-01-02&amp;quot; }}&amp;quot;,&#xA;            &amp;quot;emoji&amp;quot;: &amp;quot;⛰️&amp;quot;,&#xA;            &amp;quot;eventname&amp;quot;: &amp;quot;{{ $item.Title }}&amp;quot;,&#xA;            &amp;quot;link&amp;quot;: &amp;quot;{{ $item.Permalink }}&amp;quot;&#xA;        }{{ if ne (add $index 1) (len $filteredPosts) }},{{ end }}&#xA;        {{- end }}&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;read-json-data&#34;&gt;Read json data&lt;/h3&gt;&#xA;&lt;p&gt;Assumes json file is in assets/data/&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;{{ $p := printf &amp;quot;data/jsonfile.json&amp;quot; }}&#xA;{{ $data := dict }}&#xA;{{ with resources.Get $p }}&#xA;    {{ $data = . | transform.Unmarshal }}&#xA;{{ else }}&#xA;    {{ errorf &amp;quot;Unable to get resource %q&amp;quot; $p }}&#xA;{{ end }}&#xA;&#xA;// Use jsonify to convert the data to a string&#xA;const jsonData = JSON.parse(`{{ $data | jsonify }}`);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>Lifemap</title>
      <link>https://srikanthperinkulam.com/lifemap/</link>
      <pubDate>Sat, 15 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://srikanthperinkulam.com/lifemap/</guid>
      <description></description>
    </item>
  </channel>
</rss>
