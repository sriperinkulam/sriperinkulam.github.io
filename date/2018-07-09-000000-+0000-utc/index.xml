<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2018-07-09 00:00:00 &#43;0000 UTC on Srikanth Perinkulam</title>
    <link>http://localhost:1313/date/2018-07-09-000000-&#43;0000-utc/index.xml</link>
    <description>Recent content in 2018-07-09 00:00:00 &#43;0000 UTC on Srikanth Perinkulam</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</managingEditor>
    <webMaster>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</webMaster>
    <lastBuildDate>Mon, 09 Jul 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/date/2018-07-09-000000-+0000-utc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Snappy Nextcloud</title>
      <link>http://localhost:1313/2018/07/09/snappy-nextcloud/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate><author>ssphugo@srkn.anonaddy.com (Srikanth Perinkulam)</author>
      <guid>http://localhost:1313/2018/07/09/snappy-nextcloud/</guid>
      <description>&lt;p&gt;Last year, I procured a &lt;a href=&#34;https://nextcloud.com/box/&#34;&gt;Nextcloud box&lt;/a&gt; and moved part of my data to it. I&amp;rsquo;d just heard about &lt;a href=&#34;https://srikanthperinkulam.com/2017/11/04/fired-up/&#34;&gt;Ubuntu Snappy Core OS&lt;/a&gt; and was keen on porting my install to that setup. I finally got around doing that last week and thought I&amp;rsquo;d quickly jot down the install steps for reference later. Essentially, I installed the Core OS on a 32GB microSD card and installed Nextcloud as a snap. Two 1TB hard drives service the Pi3 and are synced with rclone. Below is a crude outline of the setup:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Install and sign-in to the UbuntuCore OS:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;1.Download the latest &lt;a href=&#34;https://www.ubuntu.com/core&#34;&gt;Ubuntu Core OS&lt;/a&gt; and useÂ &lt;a href=&#34;https://etcher.io/&#34;&gt;Etcher&lt;/a&gt; to burn it on to a microSSD card.&lt;/p&gt;&#xA;&lt;p&gt;2.On your local machine generate a public/private rsa key using the following command: &lt;code&gt;ssh-keygen -t rsa&lt;/code&gt; Create an &lt;a href=&#34;https://login.ubuntu.com/&#34;&gt;UbuntuOne&lt;/a&gt; account if you don&amp;rsquo;t already have one and import your ssh key to your account. You&amp;rsquo;ll need this to ssh into your Core OS pretty soon.&lt;/p&gt;&#xA;&lt;p&gt;3.Slide in the microSSD card onto the Pi3 board. Then connect a monitor, keyboard and hard drive to the Pi3 and power it on. The Pi3 Board B comes with in-built wi-fi and bluetooth and once powered on it should automatically prompt you to connect to the wi-fi and then to your UbuntuONE account. Once this is setup, you should be able to ssh into the CoreOS from your local machine using: &lt;code&gt;ssh ubuntu-username@192.168.0.xx&lt;/code&gt; [btw] If ssh fails - &amp;ldquo;Error - signandsend_pubkey: signing failed: agent refused operation&amp;rdquo;. This is most likely because the ssh agent is already running but isn&amp;rsquo;t able to find the private keys. To add the keys to the authentication agent, enter &lt;code&gt;ssh-add&lt;/code&gt;. Also to see list of fingerprints of all identities added use &lt;code&gt;ssh-add -l&lt;/code&gt; [/btw][btw]To add a password for the user: &lt;code&gt;sudo passwd ubuntu-username&lt;/code&gt;[/btw][btw]To re-configure network at anytime: &lt;code&gt;sudo console-conf&lt;/code&gt;[/btw]&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;External Drive setup&lt;/strong&gt; 1.I use two external hard-drives one as a primary and the other as a secondary. First format the drives: &lt;code&gt;sudo fdisk /dev/sda&lt;/code&gt; [btw]&lt;code&gt;Welcome to fdisk (util-linux 2.27.1). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Command (m for help): o Created a new DOS disklabel with disk identifier 0x8b913f43. Command (m for help): n Partition type p primary (0 primary, 0 extended, 4 free) e extended (container for logical partitions) Select (default p): p Partition number (1-4, default 1): First sector (2048-1953458175, default 2048): Last sector, +sectors or +size{K,M,G,T,P} (2048-1953458175, default 1953458175): Created a new partition 1 of type &#39;Linux&#39; and of size 931.5 GiB. Command (m for help): w The partition table has been altered. Calling ioctl() to re-read partition table. Syncing disks.&lt;/code&gt; [/btw]&lt;/p&gt;&#xA;&lt;p&gt;2.Format the partition and give it the label data. This label will be used to reference it for mounting later: &lt;code&gt;sudo mkfs.ext4 -L data /dev/sda1&lt;/code&gt; [btw] mke2fs 1.42.13 (17-May-2015) /dev/sda1 contains a ext4 file system labelled &amp;lsquo;data&amp;rsquo; last mounted on Sat Nov 18 08:38:49 2017 Proceed anyway? (y,n) y Creating filesystem with 244182016 4k blocks and 61046784 inodes Filesystem UUID: c03685e6-fc4d-4d69-b8cf-8b17b24f2e0a Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968, 102400000, 214990848 Allocating group tables: done&lt;br&gt;&#xA;Writing inode tables: done&lt;br&gt;&#xA;Creating journal (32768 blocks): done Writing superblocks and filesystem accounting information: done [/btw]&lt;/p&gt;&#xA;&lt;p&gt;3.To mount the partition we&amp;rsquo;re forced to rely on systemd since most of Ubuntu core system is read-only and editing /etc/fstab is not an option. Mount units need to be named after the mount point directories they control. So create the media-data.mount unit: &lt;code&gt;sudo vi /writable/system-data/etc/systemd/system/media-data.mount&lt;/code&gt; and add in the following content: &lt;code&gt;[Unit] Description=Mount unit for data [Mount] What=/dev/disk/by-label/data Where=/media/data Type=ext4 [Install] WantedBy=multi-user.target&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;4.Reload systemd to reflect the changes,Start and enable the mount volume so it gets automatically mounted: &lt;code&gt;sudo systemctl daemon-reload sudo systemctl start media-data.mount sudo systemctl enable media-data.mount&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;5.Make sure Ubuntucore is up to date and refresh: &lt;code&gt;sudo snap refresh sudo reboot&lt;/code&gt; After the reboot make sure /media/data is mounted and functional: &lt;code&gt;sudo systemctl status media-data.mount&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Install and configure Nextcloud as a snap&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;1.Install Nextcloud: &lt;code&gt;sudo snap install nextcloud&lt;/code&gt; 2.Access the nextcloud install from any browser in the network using the IP address: &lt;a href=&#34;http://192.168.0.xx&#34;&gt;http://192.168.0.xx&lt;/a&gt;, create an admin account and complete the installation. 3.Enable the &amp;lsquo;External Storages&amp;rsquo; app under &amp;lsquo;Apps&amp;rsquo;. 4.Associate the removable media with nextcloud: &lt;code&gt;sudo snap connect nextcloud:removable-media core:removable-media&lt;/code&gt; 5.Map /media/data with nextcloud in the external storage with the following settings: &lt;code&gt;Folder name: data External storage: Local Authentication: None Configuration: /media/data Available for: All&lt;/code&gt; 6.Setup encryption certificates: &lt;code&gt;sudo nextcloud.enable-https self-signed&lt;/code&gt; 7.To access the setup pi3 server from outside the local network, you&amp;rsquo;ll need to map the dynamic dns provided by your ISP to a global address. I used no-ip and my netgear router to facilitate this. 8. Do note that when you upload files, by default they&amp;rsquo;re saved to the microSD card!![btw]here: /var/snap/nextcloud/common/nextcloud/data/&lt;em&gt;NC_user&lt;/em&gt;/files[/btw]. Read &lt;a href=&#34;https://help.nextcloud.com/t/is-there-a-safe-and-reliable-way-to-move-data-directory-out-of-web-root/3642/51&#34;&gt;this forum&lt;/a&gt; for details. 9. If more than one user would be using the external data mount either install the &amp;lsquo;File access control&amp;rsquo; app and setup rules or create folders for each person and just mount those folders for each user in the Nextcloud admin panel.&lt;/p&gt;&#xA;</description>
    </item>
  </channel>
</rss>
